mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"), levels=c(0,1))
table(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"), levels=c(0,1))
table(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
View(mtcars)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(mtcars)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
max(mtcars$am)
max(table(mtcars$am))
max(name(table(mtcars$am)))
max(names(table(mtcars$am)))
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
max(names(table(mtcars$am)))
table(mtcars$am)
max(names(table(mtcars$am)))
table(mtcars$am)
mix(names(table(mtcars$am)))
table(mtcars$am)
min(names(table(mtcars$am)))
table(mtcars$am)
names(min(table(mtcars$am)))
table(mtcars$am)
names(min(table(mtcars$am)))
table(mtcars$am)
apply(mtcars$am, FUN = max())
table(mtcars$am)
apply(mtcars$am, FUN = max)
table(mtcars$am)
apply(table(mtcars$am), FUN = max)
table(mtcars$am)
mtcars$am
if (count()) {
}
table(mtcars$am)
str(mtcars)
mtcars
str(mtcars)
max(mtcars$wt)
names(max(mtcars$wt))
row.names(max(mtcars$wt))
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
table(mtcars$am)
row.names(max(mtcars$wt))
which(max(mtcars$wt))
which.max(mtcars$wt)
mtcars[which.max(mtcars$wt)]
mtcars[which.max(mtcars$wt),]
row.names(mtcars)[which.max(mtcars$wt),]
row.names(mtcars)[which.max(mtcars$wt)]
max(table(mtcars$am))
colnames(table(mtcars$am))
(table(mtcars$am))
levels(table(mtcars$am))
(levels(mtcars$am))
(max(mtcars$am))
table(mtcars$am)
help("format")
help("paste")
paste("Car heaviest => ", row.names(mtcars)[which.max(mtcars$wt)])
print(row.names(mtcars)[which.max(mtcars$wt)])
mtcars
?mtcars
paste("Car heaviest => ", row.names(mtcars)[which.max(mtcars$wt)])
paste("Car fastest =>", row.names(mtcars)[which.max(mtcars$qsec)])
?which
install.packages("plyr")
library(plyr)
freq <- count(mtcars$am)
freq
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
paste("Car heaviest => ", row.names(mtcars)[which.max(mtcars$wt)])
paste("Car fastest =>", row.names(mtcars)[which.max(mtcars$qsec)])
auto.mpg <- mean(whi)
library(plyr)
frq <- count(mtcars$am)
frq
library(plyr)
frq <- count(mtcars$am)
frq[x,]
library(plyr)
frq <- count(mtcars$am)
frq[x]
library(plyr)
frq <- count(mtcars$am)
frq$x
library(plyr)
frq <- count(mtcars$am)
frq[1,1]
library(plyr)
frq <- count(mtcars$am)
frq[1,1]
library(plyr)
frq <- count(mtcars$am)
frq
library(plyr)
frq <- count(mtcars$am)
frq[which.max(frq$freq),]
library(plyr)
frq <- count(mtcars$am)
frq[which.max(frq$freq),1]
auto.mpg <- mtcars['mpg',]
auto.mpg <- mtcars['mpg',]
auto.mpg
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
frq[which.max(frq$freq),1]
paste("Car heaviest => ", row.names(mtcars)[which.max(mtcars$wt)])
paste("Car fastest =>", row.names(mtcars)[which.max(mtcars$qsec)])
auto.mpg <- mtcars['mpg',]
auto.mpg
auto.mpg <- mtcars[,'mpg']
auto.mpg
mean(mtcars$mpg)
install.packages("dplyr")
library(dplyr)
am.mpg <- filter(mtcars, am)
?filter
??filter
library(dplyr)
am.mpg <- group_by(data = mtcars, am)
library(dplyr)
am.mpg <- group_by(mtcars, am)
library(dplyr)
am.mpg <- group_by(mtcars, am)
am.mpg
View(am.mpg)
View(am.mpg)
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(dplyr)
frq <- count(mtcars$am)
install.packages("plyr")
install.packages("plyr")
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
frq[which.max(frq$freq),1]
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
frq[which.max(frq$freq),1]
paste("Car heaviest => ", row.names(mtcars)[which.max(mtcars$wt)])
paste("Car fastest =>", row.names(mtcars)[which.max(mtcars$qsec)])
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
if (mean(auto.am$mpg) > mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else if (mean(auto.am$mpg) < mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else {
print("Both type of cars have same mpg")
}
mean(auto.am$mpg)
View(auto.am)
View(auto.am)
View(manual.am)
View(manual.am)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
if (mean(auto.am$mpg) > mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else if (mean(auto.am$mpg) < mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else {
print("Both type of cars have same mpg")
}
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
if (mean(auto.am$mpg) > mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else if (mean(auto.am$mpg) < mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else {
print("Both type of cars have same mpg")
}
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
frq[which.max(frq$freq),1]
paste("Car heaviest => ", row.names(mtcars)[which.max(mtcars$wt)])
paste("Car fastest =>", row.names(mtcars)[which.max(mtcars$qsec)])
library(dplyr)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(dplyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(plyr)
frq <- count(mtcars$am)
frq <- count(mtcars$am)
remove.packages("plyr")
remove.packages("dplyr")
install.packages(c("boot", "foreign", "MASS", "nlme", "rlang", "tidyselect", "TSP", "vctrs"))
install.packages("dplyr")
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
library(dplyr)
frq <- count(mtcars$am)
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
if (mean(auto.am$mpg) > mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else if (mean(auto.am$mpg) < mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else {
print("Both type of cars have same mpg")
}
library("plyr")
hp <- mtcars$hp
hp <- mtcars$hp
hp
hp <- mtcars$hp
length(hp[hp > mean(hp)])
sum(mtcars$hp > mean(mtcars$hp) & mtcars$cyl == 6)
sum(mtcars$hp > mean(mtcars$hp) & mtcars$cyl == 6 & mtcars$am == "Automatic")
mtcars[(mtcars$hp > mean(mtcars$hp) & mtcars$cyl == 6)]
sum(mtcars$hp > mean(mtcars$hp) & mtcars$cyl == 6)
boxplot(x = mtcars$mpg)
boxplot(x = mtcars$mpg ~ mtcars$cyl)
boxplot(mtcars$mpg ~ mtcars$cyl)
boxplot(x = mtcars$mpg ~ mtcars$cyl)
boxplot(mtcars$mpg ~ mtcars$cyl)
boxplot(mtcars$mpg ~ mtcars$cyl ~ mtcars$am)
boxplot(mtcars$mpg ~ mtcars$cyl)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# 1
mtcars$am == "Automatic"
# 1
sum(mtcars$am == "Automatic")
sum(mtcars$am == "Manual")
print("Manual cars are more")
print("Manual cars are more")
if(sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual"))
print("Automatic cars are more")
else
if(sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual"))
print("Automatic cars are more")
else
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels=c("Automatic","Manual"), levels=c(0,1))
if(sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual"))
print("Automatic cars are more")
else
if sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual")
source('~/.active-rstudio-document')
if sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# One time activity
mtcars$cyl <- as.factor(mtcars$cyl)
mtcars$am <- factor(mtcars$am, labels = c("Automatic", "Manual"), levels = c(0, 1))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
if (sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual")) {
print("Automatic cars are more")
} else {
print("Manual cars are more")
}
if (sum(mtcars$am == "Automatic") > sum(mtcars$am == "Manual")) {
print("Automatic cars are more")
} else {
print("Manual cars are more")
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# 2
print(which.max(mtcars$wt))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
paste("heaviest car :", row.names(mtcars)[which.max(mtcars$wt)])
source('~/.active-rstudio-document')
paste("heaviest car :", row.names(mtcars)[which.max(mtcars$wt)])
source('~/.active-rstudio-document')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
if (mean(auto.am$mpg) > mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else if (mean(auto.am$mpg) < mean(manual.am$mpg)) {
print("Manual cars have better mpg")
} else {
print("Both type of cars have same mpg")
}
library(dplyr)
library(dplyr)
auto.am <- filter(mtcars, am != "Manual")
manual.am <- filter(mtcars, am == "Manual")
if (mean(auto.am$mpg) > mean(manual.am$mpg)) {
print("Automatic cars have better mpg")
} else if (mean(auto.am$mpg) < mean(manual.am$mpg)) {
print("Manual cars have better mpg")
} else {
print("Both type of cars have same mpg")
}
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
print(length(mtcars$hp[mtcars$hp > mean(mtcars$hp)]))
print(length(mtcars$hp[mtcars$hp > mean(mtcars$hp)]))
print(length(mtcars$hp[mtcars$hp > mean(mtcars$hp)]))
print(length(mtcars$hp[mtcars$hp > mean(mtcars$hp)]))
print(length(mtcars$hp[mtcars$hp > mean(mtcars$hp)]))
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
source('~/Documents/MSC/Sem 1/Data Mining & Machine Learning/2_ Data_Preprocessing_Transformation/R_Scripts/ExerciseLab_2.R')
install.packages(c("ggplot2", "ggthemes", "scales", "dplyr", "mice", "randomForest"))
setwd('/Users/sobil/Documents/MSC/Sem 1/Data Mining & Machine Learning/3_PredictionModelEvaluation/Lab/Rscript/')
titanicData <- read.csv(file = "titanic.csv", header = TRUE, na.strings = "", stringsAsFactors = TRUE)
View(titanicData)
View(titanicData)
View(titanicData)
View(titanicData)
mtcars
# Task 2
titanicData$Survived <- as.factor(titanicData$Survived)
View(titanicData)
View(titanicData)
titanicData$Pclass <- as.factor(titanicData$Pclass)
# Task 3
is.na(titanicData)
sapply(titanicData, funtion(x) sum(is.na(x)))
sapply(titanicData, function(x) sum(is.na(x)))
install.packages("data.table")
install.packages("Amelia")
missmap(obj = titanicData, main = "Missing values vs observed")
library(Amelia)
missmap(obj = titanicData, main = "Missing values vs observed")
# handing missing data of embarked (Total 2 values missing)
library(dplyr)
# handing missing data of embarked (Total 2 values missing)
print(paste("Passenger Id : ", titanicData[is.na(titanicData$Embarked), 1], "missing data"))
# handing missing data of embarked (Total 2 values missing)
print(paste("Passenger Id : ", titanicData[is.na(titanicData$Embarked), 1], "missing data\n"))
library(dplyr)
# handing missing data of embarked (Total 2 values missing)
print(paste("Passenger Id : ", titanicData[is.na(titanicData$Embarked), 1], "missing data\\n"))
# handing missing data of embarked (Total 2 values missing)
print(paste("Passenger Id : ", titanicData[is.na(titanicData$Embarked), 1], "missing data \n"))
# handing missing data of embarked (Total 2 values missing)
print(paste("Passenger Id : ", titanicData[is.na(titanicData$Embarked), 1], "missing data \n"))
View(titanicData)
View(titanicData)
# handing missing data of embarked (Total 2 values missing)
passengerId <- titanicData[is.na(titanicData$Embarked), 1]
print(paste("Passenger Id : ", passengerId.missing, "missing data \n"))
# handing missing data of embarked (Total 2 values missing)
passengerId.missing <- titanicData[is.na(titanicData$Embarked), 1]
print(paste("Passenger Id : ", passengerId.missing, "missing data \n"))
print(paste(passengerId.missing)
print(paste(passengerId.missing)
embarked <- titanicData %>%
filter(PassengerId == )
print(passengerId.missing)
print(type(passengerId.missing))
print(type(passengerId.missing))
print(typeof(passengerId.missing))
print(is.vector(passengerId.missing))
embarked <- titanicData %>%
filter(PassengerId in passengerId.missing )
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
embarked <- titanicData %>%
filter(PassengerId in passengerId.missing )
embarked <- titanicData %>%
filter(PassengerId in passengerId.missing )
embarked <- titanicData %>%
filter(PassengerId == passengerId.missing )
print(embarked)
titanicData[is.na(titanicData$Embarked), 1]
embarked <- titanicData %>%
filter(PassengerId == passengerId.missing )
print(embarked)
embarked <- titanicData %>%
filter(PassengerId == titanicData[is.na(titanicData$Embarked), 1] )
print(embarked)
embarked <- titanicData %>%
filter(titanicData[is.na(titanicData$Embarked), 1] )
embarked <- titanicData %>%
filter(titanicData[is.na(titanicData$Embarked), 1] )
embarked <- titanicData %>%
filter(is.na(titanicData$Embarked))
print(embarked)
